$date
  Thu Mar 21 15:31:05 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module test_etage_mem $end
$var reg 32 ! res_me[31:0] $end
$var reg 32 " wd_me[31:0] $end
$var reg 4 # op3_me[3:0] $end
$var reg 1 $ e_clk $end
$var reg 1 % memwr_mem $end
$var reg 32 & res_mem_me[31:0] $end
$var reg 32 ' res_alu_me[31:0] $end
$var reg 4 ( op3_me_out[3:0] $end
$var reg 32 ) res_fwd_me[31:0] $end
$scope module mem $end
$var reg 32 * res_me[31:0] $end
$var reg 32 + wd_me[31:0] $end
$var reg 4 , op3_me[3:0] $end
$var reg 1 - clk $end
$var reg 1 . memwr_mem $end
$var reg 32 / res_mem_me[31:0] $end
$var reg 32 0 res_alu_me[31:0] $end
$var reg 4 1 op3_me_out[3:0] $end
$var reg 32 2 res_fwd_me[31:0] $end
$scope module mem_data $end
$var reg 32 3 addr[31:0] $end
$var reg 32 4 wd[31:0] $end
$var reg 1 5 clk $end
$var reg 1 6 wr $end
$var reg 32 7 data[31:0] $end
$scope module mem $end
$var reg 1 8 clk $end
$var reg 1 9 we $end
$var reg 32 : a[31:0] $end
$var reg 32 ; wd[31:0] $end
$var reg 32 < rd[31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000011 !
b00000000000000000000000000000000 "
b0000 #
1$
0%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU &
b00000000000000000000000000000011 '
b0000 (
b00000000000000000000000000000011 )
b00000000000000000000000000000011 *
b00000000000000000000000000000000 +
b0000 ,
1-
0.
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU /
b00000000000000000000000000000011 0
b0000 1
b00000000000000000000000000000011 2
b00000000000000000000000000000011 3
b00000000000000000000000000000000 4
15
06
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 7
18
09
b00000000000000000000000000000011 :
b00000000000000000000000000000000 ;
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU <
#5000000
0$
0-
05
08
#10000000
1$
1-
15
18
