$date
  Wed Mar 27 19:06:33 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module test_decodeur $end
$var reg 1 ! e_clk $end
$var reg 32 " instr[31:0] $end
$var reg 1 # pcsrc $end
$var reg 1 $ regwr $end
$var reg 1 % memtoreg $end
$var reg 1 & memwr $end
$var reg 1 ' branch $end
$var reg 1 ( ccwr $end
$var reg 1 ) alusrc $end
$var reg 2 * aluctrl[1:0] $end
$var reg 2 + immsrc[1:0] $end
$var reg 2 , regsrc[1:0] $end
$var reg 4 - cond[3:0] $end
$scope module decodeur $end
$var reg 32 . instr[31:0] $end
$var reg 1 / pcsrc $end
$var reg 1 0 regwr $end
$var reg 1 1 memtoreg $end
$var reg 1 2 memwr $end
$var reg 1 3 branch $end
$var reg 1 4 ccwr $end
$var reg 1 5 alusrc $end
$var reg 2 6 aluctrl[1:0] $end
$var reg 2 7 immsrc[1:0] $end
$var reg 2 8 regsrc[1:0] $end
$var reg 4 9 cond[3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
b11110000100100100011000000001000 "
0#
0$
0%
0&
0'
1(
0)
b00 *
b00 +
b00 ,
b1111 -
b11110000100100100011000000001000 .
0/
00
01
02
03
14
05
b00 6
b00 7
b00 8
b1111 9
#5000000
0!
#10000000
1!
b11111010000000000000000000000000 "
1'
0(
1)
b10 +
b01 ,
b11111010000000000000000000000000 .
13
04
15
b10 7
b01 8
#15000000
0!
#20000000
1!
